{
	// ${workspaceFolder} - the path of the folder opened in Sublime
	// ${workspaceFolderBasename} - the name of the folder opened in Sublime without any slashes (/)
	// ${file} - the current opened file
	// ${relativeFile} - the current opened file relative to workspaceFolder
	// ${fileBasename} - the current opened file's basename
	// ${fileBasenameNoExtension} - the current opened file's basename with no file extension
	// ${fileDirname} - the current opened file's dirname
	// ${fileExtname} - the current opened file's extension
	// ${cwd} - the task runner's current working directory on startup
	// ${selectedText} - the current selected text in the active file
    // ${input:custom_string} - Custom String
    // set default input value in "custom_env" object
	"tasks" : [
		{
			"label" : "echo:env",
			"command": "echo JAVA_HOME:${env:JAVA_HOME}, USERPROFILE:${env:USERPROFILE}"
		},
		{
			"label" : "echo:test",
			"command": "echo ${input:param1}, ${input:log_file}, ${select:LOGLEVEL}"
		},
		{
			"label" : "node:version",
			"encoding": "UTF-8",
			"command": "node -v"
		},
		{
			"label" : "node:hello-world",
			"command": "echo console.log('hello world'); >> ./hello-world.js"
		},
		{
			"label" : "node:run",
			"encoding": "UTF-8",
			"command": "node ${file}"
		},
		{
			"label" : "java:version",
			"os_termial": true,
			"command": "java -version"
		},
		{
			"label" : "ruby:version",
			"encoding": "UTF-8",
			"command": "ruby -v"
		},
		{
			"label" : "python:version",
			"encoding": "UTF-8",
			"command": "python --version"
		},
		{
			"label" : "php:version",
			"command": "php -v"
		},
	],
    "custom_env" : {
        "log_file" : "./tmp.log",
        "LOGLEVEL" : ["trace", "debug", "info", "warn", "error", "fatal"]
    },
    "triggers" : {
        "after_save_triggers" : [
            // {
            //     "desc" : "format python code",
            //     "filetype" : [".py"],
            //     // "folder_include" : [""],
            //     // "folder_exclude" : [""],
            //     "encoding" : "UTF-8",
            //     "command" : "yapf \"${file}\" --style \"google\" -i"
            // },
            // {
            //     "desc" : "use prettier format source",
            //     "filetype" : [".json", ".javascript", ".js", ".md", ".css", ".vue", ".yaml", ".yml"],
            //     // "folder_include" : [""],
            //     // "folder_exclude" : [""],
            //     "encoding" : "UTF-8",
            //     "command" : "prettier --write \"${file}\" --single-quote=true --end-of-line=lf --arrow-parens=always"
            // },
            // {
            //     "desc" : "format salesforce visual force, component, xml page code",
            //     "filetype" : [".cmp", ".page", ".component", ".xml"],
            //     // "folder_include" : [""],
            //     // "folder_exclude" : [""],
            //     "command" : "prettier --write \"${file}\" --single-quote=true --tab-width=4 --parser=html --end-of-line=lf --arrow-parens=always"
            // },
            // {
            //     // install prettier-plugin-apex
            //     // npm install --global prettier prettier-plugin-apex
            //     "desc" : "format salesforce trigger, classes",
            //     "filetype" : [".trigger", ".cls"],
            //     // "folder_exclude" : [""],
            //     "command" : "prettier --parser=apex --write \"${file}\" --tab-width=4 --single-quote=true"
            // },
            // {
            //     "desc" : "format salesforce apex anonymous",
            //     "filetype" : [".apex-anonymous"],
            //     "command" : "prettier --parser=apex --write \"${file}\" --tab-width=4 --single-quote=true --apex-anonymous"
            // }
        ]
    }
}
